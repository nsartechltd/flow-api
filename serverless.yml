service: flow-api

plugins:
  - serverless-offline-ssm
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-domain-manager

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-2
  stage: ${opt:stage, 'dev'}
  vpc:
    securityGroupIds:
      - ${ssm:/flow/SECURITY_GROUP_ID}
    subnetIds: ${ssm:/flow/PRIVATE_SUBNET_IDS}
  environment:
    ENVIRONMENT: ${self:provider.stage}
    NODE_ENV: ${self:custom.nodeEnv.${self:provider.stage}}
    DATABASE_URL: ${ssm:/flow/rds/DB_URL}
    FLOW_APP_URL: ${self:custom.flowAppUrl.${self:provider.stage}}
    STRIPE_SECRET_KEY: ${ssm:/flow/stripe/SECRET_KEY}
    STRIPE_WEBHOOK_SECRET: ${ssm:/flow/stripe/WEBHOOK_SECRET}
  
package:
  excludeDevDependencies: true
  individually: true
  patterns:
    - '!tests/**'

custom:
  serverless-offline-ssm:
    stages:
      - local
    ssm:
      '/flow/rds/DB_URL': ${env:DATABASE_URL, 'some-url'}
      '/flow/stripe/SECRET_KEY': ${env:STRIPE_SECRET_KEY, 'some-secret'}
      '/flow/stripe/WEBHOOK_SECRET': ${env:STRIPE_WEBHOOK_SECRET, 'some-secret'}
      '/flow/SECURITY_GROUP_ID': 'some-id'
      '/flow/PRIVATE_SUBNET_IDS': '1,2,3'
      '/nsar-tech/CERTIFICATE_ARN': 'arn:aws:acm:eu-west-2:123456789123:certificate/693cedea-5e9a-47f3-916f-413d7d5f468d'
      '/flow/COGNITO_USER_POOL_NAME': 'example-user-pool-name'
  flowAppUrl:
    local: http://localhost:5173
    dev: https://flow-dev.nsar-tech.co.uk
    prod: https://flow.nsar-tech.co.uk
  serverless-offline:
    host: 0.0.0.0
    httpPort: 3000
  nodeEnv:
    local: local
    dev: development
    prod: production
  domain: flow-api${self:custom.stageDomainPrefix.${self:provider.stage}}.nsar-tech.co.uk
  stageDomainPrefix:
    local: '-local'
    dev: '-dev'
    prod: ''
  customDomain:
    rest:
      domainName: ${self:custom.domain}
      createRoute53Record: false # managed in root account
      endpointType: 'regional'
      certificateArn: ${ssm:/nsar-tech/CERTIFICATE_ARN}
      autoDomain: true
      autoDomainWaitFor: 120

functions:
  # Flow Cognito User Pool
  storeUser:
    handler: src/functions/user.storeHandler
    events:
      - cognitoUserPool:
          pool: ${ssm:/flow/COGNITO_USER_POOL_NAME}
          trigger: PostConfirmation
          existing: true
  
  # Admin Dashboard
  createOrganisation:
    handler: src/functions/organisation.createHandler
    events:
      - http:
          path: /organisations
          method: post
          cors: true
  
  # Stripe
  stripeWebhook:
    handler: src/functions/stripe.webhookHandler
    events:
      - http:
          path: /stripe/webhook
          method: post
          cors: true
  stripeCreateSession:
    handler: src/functions/stripe.createSessionHandler
    events:
      - http:
          path: /stripe/session
          method: post
          cors: true
  stripeGetSession:
    handler: src/functions/stripe.getSessionHandler
    events:
      - http:
          path: /stripe/session/{sessionId}
          method: get
          cors: true
