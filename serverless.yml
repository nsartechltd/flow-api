service: flow-api

plugins:
  - serverless-plugin-typescript
  - serverless-offline
  - serverless-domain-manager

provider:
  name: aws
  runtime: nodejs20.x
  region: eu-west-2
  stage: ${opt:stage, 'dev'}
  vpc:
    securityGroupIds:
      - ${ssm:/flow/SECURITY_GROUP_ID}
    subnetIds: ${ssm:/flow/PRIVATE_SUBNET_IDS}
  environment:
    ENVIRONMENT: ${self:provider.stage}
    NODE_ENV: ${self:custom.nodeEnv.${self:provider.stage}}
    DATABASE_URL: ${ssm:/flow/rds/DB_URL}
  
package:
  excludeDevDependencies: true
  individually: true
  patterns:
    - "!tests/**"

custom:
  serverless-offline:
    host: 0.0.0.0
    httpPort: 3000
  nodeEnv:
    dev: development
    prod: production
  domain: flow-api${self:custom.stageDomainPrefix.${self:provider.stage}}.nsar-tech.co.uk
  stageDomainPrefix:
    dev: "-dev"
    prod: ""
  customDomain:
    rest:
      domainName: ${self:custom.domain}
      createRoute53Record: false # managed in root account
      endpointType: "regional"
      certificateArn: ${ssm:/nsar-tech/CERTIFICATE_ARN}
      autoDomain: true
      autoDomainWaitFor: 120

functions:
  storeUser:
    handler: src/functions/user.storeHandler
    events:
      - cognitoUserPool:
          pool: ${ssm:/flow/COGNITO_USER_POOL_NAME}
          trigger: PostConfirmation
          existing: true
  createOrganisation:
    handler: src/functions/organisation.createHandler
    events:
      - http:
          path: /organisations
          method: post